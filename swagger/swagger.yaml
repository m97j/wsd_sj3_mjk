openapi: 3.0.0
info:
  title: Job Board API
  description: RESTful API documentation for the Job Board application.
  version: 1.0.0
  contact:
    name: Developer Support
    email: developer@example.com
    url: https://example.com/support
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /api/auth/register:
    post:
      summary: User Registration
      description: Register a new user in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Validation error
  /api/auth/login:
    post:
      summary: User Login
      description: Authenticate a user and return a JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email or password
  /api/jobs:
    get:
      summary: Get Job Listings
      description: Retrieve a list of job postings with optional filters, sorting, and pagination.
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          description: Number of items per page
          schema:
            type: integer
            example: 20
        - name: keyword
          in: query
          description: Keyword to search job title or company
          schema:
            type: string
            example: developer
        - name: location
          in: query
          description: Location filter
          schema:
            type: string
            example: Seoul
      responses:
        '200':
          description: List of job postings
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Jobs retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 63f9a12345678c90de123456
                        title:
                          type: string
                          example: Backend Developer
                        company:
                          type: string
                          example: Tech Corp
                        location:
                          type: string
                          example: Seoul
                        salary:
                          type: string
                          example: Negotiable
                        createdAt:
                          type: string
                          example: 2024-01-01T12:00:00.000Z
  /api/bookmarks:
    get:
      summary: Get Bookmarks
      description: Retrieve a list of bookmarked jobs for the authenticated user.
      responses:
        '200':
          description: List of bookmarks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bookmarks retrieved successfully
                  bookmarks:
                    type: array
                    items:
                      type: object
                      properties:
                        jobId:
                          type: object
                          properties:
                            title:
                              type: string
                              example: Backend Developer
                            company:
                              type: string
                              example: Tech Corp
                            location:
                              type: string
                              example: Seoul
                            salary:
                              type: string
                              example: Negotiable
  /api/applications:
    post:
      summary: Apply for a Job
      description: Submit an application for a specific job posting.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  type: string
                  example: 63f9a12345678c90de123456
                resume:
                  type: string
                  example: path/to/resume.pdf
              required:
                - jobId
                - resume
      responses:
        '201':
          description: Application submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Application submitted successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You have already applied for this job
